import  math
import  matplotlib.pyplot as plt
import numpy as np

def decode_dic(solutions):
    """
    将个体全部解码成真正的解
    :param solutions: 个体集
    :return: 解的集合
    """
    result = {}
    for solution in solutions:
        x1 = round(solution[0]+solution[1],6)
        x2 = round(solution[2]+solution[3],6)
        if x1 in result:
            result[x1].append(x2)
        else:
            result[x1] = [x2]
    return result

def decode_list(solutions):
    """
    将个体全部解码成真正的解
    :param solutions: 个体集
    :return: 解的list集合
    """
    result = []
    for solution in solutions:
        x1 = round(solution[0] + solution[1], 6)
        x2 = round(solution[2] + solution[3], 6)
        res = [x1,x2]
        result.append(res)
    return result

def show_scatter(solutions,n):
    """
    通过个体给出图案
    :param solutions: 个体集
    :param n: 前n个
    :return: none
    """
    result = decode_list(solutions)
    result = result[0:n]
    result = np.array(result)
    x = result[:, 0]
    y = result[:, 1]
    plt.xlabel("x1")
    plt.ylabel("x2")
    plt.xlim(0,6)
    plt.ylim(0,6)
    plt.scatter(x, y)

    m = [0.9,2.4,3.9,5.5] #正确答案
    x1 = []
    y1 = []
    for i in range(len(m)):
        for j in range(len(m)):
            x1.append(m[i])
            y1.append(m[j])
    x1 = np.array(x1)
    y1 = np.array(y1)
    plt.scatter(x1,y1,c='red',alpha=0.5)
    plt.show()


if __name__ == '__main__':
    solutions = [[0.37957428187985254, 3.624599006950834, 0.8246253573649954, 0.03802531227898203], [0.37957428187985254, 3.624599006950834, 0.009894687721017963, 3.183646666257835], [0.37957428187985254, 0.07768683706907491, 0.8246253573649954, 0.03802531227898203], [0.37957428187985254, 3.624599006950834, 0.20806616141160886, 0.04334583858839117], [0.37957428187985254, 0.07768683706907491, 0.20806616141160886, 0.04334583858839117], [0.37957428187985254, 3.624599006950834, 0.9814424901461396, 0.5915245698330239], [0.37957428187985254, 0.07768683706907491, 0.9814424901461396, 0.5915245698330239], [0.02567738025796386, 0.7319876197420362, 0.8246253573649954, 0.03802531227898203], [0.37957428187985254, 3.624599006950834, 0.009894687721017963, 0.04334583858839117], [0.37957428187985254, 0.07768683706907491, 0.009894687721017963, 0.04334583858839117], [0.37957428187985254, 3.624599006950834, 0.009894687721017963, 0.03802531227898203], [0.37957428187985254, 0.07768683706907491, 0.009894687721017963, 0.03802531227898203], [0.02567738025796386, 0.7319876197420362, 0.20806616141160886, 0.04334583858839117], [0.02567738025796386, 0.7319876197420362, 0.9814424901461396, 0.5915245698330239], [2.8477186962044936, 0.043721515159410085, 0.8246253573649954, 0.03802531227898203], [0.37957428187985254, 3.624599006950834, 0.20806616141160886, 3.183646666257835], [0.37957428187985254, 0.07768683706907491, 0.20806616141160886, 3.183646666257835], [0.37957428187985254, 3.624599006950834, 0.35316939915180307, 0.3088316008481969], [0.37957428187985254, 0.07768683706907491, 0.35316939915180307, 0.3088316008481969], [0.02567738025796386, 0.7319876197420362, 0.009894687721017963, 0.04334583858839117], [0.02567738025796386, 0.7319876197420362, 0.009894687721017963, 0.03802531227898203], [2.8477186962044936, 0.043721515159410085, 0.20806616141160886, 0.04334583858839117], [2.8477186962044936, 0.043721515159410085, 0.9814424901461396, 0.5915245698330239], [0.02567738025796386, 0.7319876197420362, 0.20806616141160886, 3.183646666257835], [0.02567738025796386, 0.7319876197420362, 0.35316939915180307, 0.3088316008481969], [2.8477186962044936, 0.043721515159410085, 0.009894687721017963, 0.04334583858839117], [2.8477186962044936, 0.043721515159410085, 0.009894687721017963, 0.03802531227898203], [0.37957428187985254, 3.624599006950834, 1.3206768480785944, 0.04334583858839117], [0.37957428187985254, 0.07768683706907491, 1.3206768480785944, 0.04334583858839117], [2.8477186962044936, 0.043721515159410085, 0.20806616141160886, 3.183646666257835], [2.8477186962044936, 0.043721515159410085, 0.35316939915180307, 0.3088316008481969], [0.02567738025796386, 0.7319876197420362, 1.3206768480785944, 0.04334583858839117]]
    show_scatter(solutions,len(solutions))